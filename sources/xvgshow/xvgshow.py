#################################
# author : charlie
# time : 20200710
# usage : to visualize the xvg file generated by GROMACS on Win10
# command : python3 xvgshow.py filename.xvg -s -n1,2,3
# arguements:
#     filename.xvg : generated by GROMACS
#     plotMode: '-s' for subplots or '-o' for oneplot (default '-o') (optional)
#     column number: start with '-n' and split number by ',', like '-n2,3,5' (optional)
#################################

import sys
import seaborn as sns
from matplotlib import pyplot as plt
from matplotlib import pylab as pylab

# 绘图控制参数
myparams = {
    'axes.labelsize': '12',
    'xtick.labelsize': '12',
    'ytick.labelsize': '12',
    'lines.linewidth': '1',
    'legend.fontsize': '12',
    'font.family': 'Times New Roman'
}
pylab.rcParams.update(myparams)
# matplotlib.style.use('ggplot')


def cols_num_gen(cols):
    for i in range(1, len(cols)+1):
        yield i


def picture_oneplot(title, xlabel, ylabel, data, cols):
    legend_lis = []
    for i in cols:
        legend_lis.append(data[i][0])
        plt.plot(data[0][1:], data[i][1:])

    plt.title(title)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.legend(labels=legend_lis, loc='best').get_frame().set_linewidth(0.0)
    plt.show()


def picture_subplot(title, xlabel, ylabel, data, cols):
    # 传一个可变对象 [] 真是愚蠢至极
    ylabel_li = ylabel.split(',')
    ylabel_use = []
    if len(ylabel_li) != len(cols):
        ylabel_use = [ylabel for i in range(len(cols))]
    else:
        ylabel_use = ylabel_li

    plot_num = cols_num_gen(cols)
    print(len(data[0]))
    for i in cols:
        ax = plt.subplot(len(cols), 1, next(plot_num))
        ax.plot(data[0][1:], data[i][1:])
        if i == cols[-1]:
            plt.xlabel(xlabel)
        ax.set_ylabel(ylabel_use[i-1])
        if i != cols[-1]:
            ax.set_xticks([])
        legend_lis = []
        legend_lis.append(data[i][0])
        ax.legend(labels=legend_lis, loc='best').get_frame().set_linewidth(0.0)
        if i == cols[0]:
            plt.title(title)

    plt.show()


def xvg_deal(filename):
    with open(filename, 'r') as fo:
        content = fo.read()
    line_list = content.strip('\n').split('\n')
    column_num = len(line_list[-1].split())
    data = []
    for i in range(column_num):
        data.append([])
    data[0].append('time')
    title = "Null"
    xlabel = "Null"
    ylabel = "Null"
    for line in line_list:
        if line[0] == "@":
            if "title" in line:
                title_line = line.strip('"')
                if '"' in title_line:
                    title = title_line.split('"')[-1]
            elif "xaxis" in line:
                xlabel_line = line.strip('"')
                if '"' in xlabel_line:
                    xlabel = xlabel_line.split('"')[-1]
            elif "yaxis" in line:
                ylabel_line = line.strip('"')
                if '"' in ylabel_line:
                    ylabel = ylabel_line.split('"')[-1]
            elif "legend" in line and "@ s" in line:
                legend = line.strip('"').split('"')[-1]
                for i in range(1, column_num):
                    if len(data[i]) == 0:
                        data[i].append(legend)
                        break

        elif line[0] != '#' and line[0] != '@' and ('time' not in line):
            num_list = line.strip().split()
            for i in range(column_num):
                if len(data[i]) == 0:
                    data[i].append('no-legend')
                data[i].append(float(num_list[i]))

    return title, xlabel, ylabel, data


def main():
    command = [i for i in sys.argv]
    command.append(" ")
    command.reverse()
    command.pop()

    if len(command) != 1:
        filename = command.pop()
    else:
        print(" --> NO FILE !")
        return
    if filename == "-h":
        print("arguements:\n    filename.xvg : generated by GROMACS")
        print("    plotMode: '-s' for subplots or \
'-o' for oneplot (default '-o') (optional)")
        print("    column number: start with '-n' and split \
number by ',', like '-n2,3,5' (optional)")
        print("e.g. python3 xvgshow.py filename.xvg -s -n1,2,3")
        return

    filename = filename.strip()
    title, xlabel, ylabel, data = xvg_deal(filename)
    try:
        title, xlabel, ylabel, data = xvg_deal(filename)
    except:
        print("== Wrong filename ==")

    plot_func = '-o'
    cols = [i for i in range(1, len(data))]
    for cm in command:
        if cm[0] == '-':
            if cm == '-s' or cm == '-o':
                plot_func = cm
            elif cm[0:2] == '-n':
                cols_ori = [int(column)
                            for column in cm[2:].strip(',').split(',')]
                col = []
                for c in cols_ori:
                    if c in cols:
                        col.append(c)
                    elif c not in cols:
                        print("== column number " +
                              str(c) + " is out of range. ")
                cols = col
            else:
                print(" Wrong arguements which has been ignored ! ")
    
    ## data check block
    # for i in range(len(data[0])):
    #    for j in range(len(data)):
    #        print(data[j][i], end = '')
    #    print('')

    if plot_func == '-s' and  len(cols) > 1:
        picture_subplot(title, xlabel, ylabel, data, cols)
    else:
        picture_oneplot(title, xlabel, ylabel, data, cols)


if __name__ == '__main__':
    main()
